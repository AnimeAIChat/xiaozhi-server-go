// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/system": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "获取服务器的系统配置信息，包括选择的提供商和默认提示词",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "获取系统配置",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webapi.SystemConfig"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/cfg": {
            "get": {
                "description": "检查配置服务的运行状态",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "检查配置服务状态",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/ota/": {
            "post": {
                "description": "处理设备OTA请求，包括设备注册、激活码生成和固件信息返回",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OTA"
                ],
                "summary": "OTA设备注册和固件更新",
                "parameters": [
                    {
                        "type": "string",
                        "description": "设备ID",
                        "name": "device-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "客户端ID",
                        "name": "client-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "设备信息",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ota.OTAResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/vision": {
            "get": {
                "description": "获取Vision服务的运行状态和可用模型信息",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Vision"
                ],
                "summary": "检查Vision服务状态",
                "responses": {
                    "200": {
                        "description": "服务状态信息",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "上传图片并进行视觉分析，支持问题询问",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vision"
                ],
                "summary": "图片视觉分析",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "设备ID",
                        "name": "Device-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "客户端ID",
                        "name": "Client-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "图片文件",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "分析问题",
                        "name": "question",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vision.VisionAnalysisData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ota.Activation": {
            "type": "object",
            "properties": {
                "challenge": {
                    "description": "用于设备认证挑战",
                    "type": "string"
                },
                "code": {
                    "type": "string",
                    "example": "543091"
                },
                "message": {
                    "type": "string",
                    "example": "Anime AI Chat 543091"
                }
            }
        },
        "ota.FirmwareInfo": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "example": "/ota_bin/1.2.4.bin"
                },
                "version": {
                    "type": "string",
                    "example": "1.2.4"
                }
            }
        },
        "ota.MQTTInfo": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string",
                    "example": "CGID_test@@@mac@@@client"
                },
                "endpoint": {
                    "type": "string",
                    "example": "mqtt://broker:1883"
                },
                "password": {
                    "type": "string",
                    "example": "randomPwd"
                },
                "publish_topic": {
                    "type": "string",
                    "example": "device-server"
                },
                "subscribe_topic": {
                    "type": "string",
                    "example": "null"
                },
                "username": {
                    "type": "string",
                    "example": "base64string"
                }
            }
        },
        "ota.OTAResponse": {
            "type": "object",
            "properties": {
                "activation": {
                    "$ref": "#/definitions/ota.Activation"
                },
                "firmware": {
                    "$ref": "#/definitions/ota.FirmwareInfo"
                },
                "mqtt": {
                    "$ref": "#/definitions/ota.MQTTInfo"
                },
                "server_time": {
                    "$ref": "#/definitions/ota.ServerTimeInfo"
                },
                "websocket": {
                    "$ref": "#/definitions/ota.WebSocketInfo"
                }
            }
        },
        "ota.ServerTimeInfo": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "integer",
                    "example": 1720065289451
                },
                "timezone_offset": {
                    "type": "integer",
                    "example": 480
                }
            }
        },
        "ota.WebSocketInfo": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "example": "wss://your-server/ws"
                }
            }
        },
        "vision.VisionAnalysisData": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "错误信息（失败时）",
                    "type": "string"
                },
                "result": {
                    "description": "分析结果（成功时）",
                    "type": "string"
                }
            }
        },
        "webapi.SystemConfig": {
            "type": "object",
            "properties": {
                "prompt": {
                    "type": "string"
                },
                "selectedASR": {
                    "type": "string"
                },
                "selectedLLM": {
                    "type": "string"
                },
                "selectedTTS": {
                    "type": "string"
                },
                "selectedVLLLM": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "小智服务端 API 文档",
	Description:      "小智服务端，包含OTA与Vision等接口",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
